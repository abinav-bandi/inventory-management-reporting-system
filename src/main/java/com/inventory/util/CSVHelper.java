package com.inventory.util;
import com.inventory.model.Product;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.*;

public class CSVHelper {
    private static final String REPORT_DIR = "reports/";
    public static String generateProductReport(List<Product> Products,String generatedBy ) {
        try {
            File dir=new File(REPORT_DIR);
            if(!dir.exists()){
                dir.mkdirs();
            }
            String fileName = generatedBy+"inventory_report"+ new SimpleDateFormat("yyyyMMddHHmmss").format(new Date())+".csv";
            try (PrintWriter writer = new PrintWriter(new FileWriter(fileName))){
                writer.println("---Inventory Report---");
                writer.println("Generated By "+generatedBy);
                writer.println("Generated on "+new SimpleDateFormat("yyyyMMddHHmmss").format(new Date()));
                writer.println("--------------------------------------------------------------------");
                writer.println("Id,Name,Category,Quantity,Price");
                if(Products!=null){
                    for(Product product:Products){
                        writer.println(product.getId()+","+product.getName()+","+product.getCategory()+","+product.getQuantity()+","+product.getPrice());

                    }
                }else {
                    writer.println("No product available");
                }
                writer.println("--------------------------------------------------------------------");
                writer.println("Total products: "+(Products!=null ?Products.size():0));
                System.out.println("Report Generated Succesfully");
            }
            return fileName;
        } catch (IOException e) {
            System.out.println("Error while writing to Report File"+e.getMessage());
            return null;
        }
    }
    public static List<Product> loadProducts() throws IOException {
        List<Product> products = new ArrayList<>();
        File file = new File(REPORT_DIR);
        if(!file.exists())
            return products;
        try(BufferedReader reader=new BufferedReader(new FileReader(file))) {
            String line;
            while ((line=reader.readLine())!=null){
                String[] parts = line.split(",");
                Product p=new Product(
                        Integer.parseInt(parts[0]),
                        parts[1],
                        parts[2],
                        Integer.parseInt(parts[3]),
                        Double.parseDouble(parts[4])
                );
                products.add(p);

            }

            }
        return products;
    }
}
